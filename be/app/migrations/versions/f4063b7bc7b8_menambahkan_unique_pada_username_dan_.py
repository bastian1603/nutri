"""menambahkan unique pada username dan email

Revision ID: f4063b7bc7b8
Revises: 573bbdbddfdb
Create Date: 2025-08-04 21:01:05.088571

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f4063b7bc7b8'
down_revision: Union[str, Sequence[str], None] = '573bbdbddfdb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users") as batch_op:
        batch_op.create_unique_constraint("uq_users_email", ['email'])
        batch_op.create_unique_constraint("uq_users_username", ['username'])
    op.drop_column('users', 'weight')
    op.drop_column('users', 'height')
    op.drop_column('users', 'birt_date')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('birt_date', sa.DATE(), nullable=False))
    op.add_column('users', sa.Column('height', sa.FLOAT(), nullable=False))
    op.add_column('users', sa.Column('weight', sa.FLOAT(), nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    # ### end Alembic commands ###
